{
	"name": "AirPollution_Transform_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Bronze_AirPollution",
						"type": "DatasetReference"
					},
					"name": "AirPollution"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Silver_AirPollution",
						"type": "DatasetReference"
					},
					"name": "SinkAirPollution"
				}
			],
			"transformations": [
				{
					"name": "FlattenAirPollution"
				},
				{
					"name": "CorrectAirPollution"
				},
				{
					"name": "FilterNullAirPollution"
				},
				{
					"name": "DerivedAirPollution"
				},
				{
					"name": "SelectionAirPollution"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as double, no as double, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> AirPollution",
				"AirPollution foldDown(unroll(),",
				"     mapColumn(",
				"          timestamp = list.dt,",
				"          lon = coord.lon,",
				"          lat = coord.lat,",
				"          aqi = list.main.aqi,",
				"          co = list.components.co,",
				"          no = list.components.no,",
				"          no2 = list.components.no2,",
				"          o3 = list.components.o3,",
				"          so2 = list.components.so2,",
				"          pm2_5 = list.components.pm2_5,",
				"          pm10 = list.components.pm10,",
				"          nh3 = list.components.nh3",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenAirPollution",
				"FlattenAirPollution derive(corrected_timestamp = iif(((length(toString(timestamp))) == 10), toInteger(timestamp), toInteger(null())),",
				"          location = 'Boston') ~> CorrectAirPollution",
				"CorrectAirPollution filter(aqi != toInteger(null()) || corrected_timestamp != toInteger(null())) ~> FilterNullAirPollution",
				"FilterNullAirPollution derive(date_time = toTimestamp(toLong(corrected_timestamp)*1000),",
				"          id = location+toString(corrected_timestamp),",
				"          lon = -71.0589,",
				"          lat = 42.3601,",
				"          co = round(co),",
				"          no = round(no),",
				"          no2 = round(no2),",
				"          o3 = round(o3),",
				"          so2 = round(so2),",
				"          pm2_5 = round(pm2_5),",
				"          pm10 = round(pm10),",
				"          nh3 = round(nh3)) ~> DerivedAirPollution",
				"DerivedAirPollution select(mapColumn(",
				"          lon,",
				"          lat,",
				"          aqi,",
				"          co,",
				"          no,",
				"          no2,",
				"          o3,",
				"          so2,",
				"          pm2_5,",
				"          pm10,",
				"          nh3,",
				"          corrected_timestamp,",
				"          location,",
				"          date_time,",
				"          id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectionAirPollution",
				"SelectionAirPollution sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkAirPollution"
			]
		}
	}
}