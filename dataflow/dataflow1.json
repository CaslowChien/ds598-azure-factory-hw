{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Bronze_Weather",
						"type": "DatasetReference"
					},
					"name": "Weather"
				},
				{
					"dataset": {
						"referenceName": "Bronze_AirPollution",
						"type": "DatasetReference"
					},
					"name": "AirPollution"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flattenWeather"
				},
				{
					"name": "flattenAirPollution"
				}
			],
			"scriptLines": [
				"source(output(",
				"          message as string,",
				"          cod as string,",
				"          city_id as integer,",
				"          calctime as double,",
				"          cnt as integer,",
				"          list as (dt as integer, main as (temp as double, feels_like as double, pressure as integer, humidity as integer, temp_min as double, temp_max as double), wind as (speed as double, deg as integer), clouds as (all as integer), weather as (id as integer, main as string, description as string, icon as string)[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     preferredFractionalType: 'float',",
				"     wildcardPaths:['/*']) ~> Weather",
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as double, no as double, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> AirPollution",
				"Weather foldDown(unroll(),",
				"     mapColumn(",
				"          coord,",
				"          list",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenWeather",
				"AirPollution foldDown(unroll(),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenAirPollution"
			]
		}
	}
}